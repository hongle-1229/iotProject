console.log(">>> File connect_mqtt.js ƒëang ch·∫°y");

import express from 'express';
import mqtt from 'mqtt';
import sql from 'mssql';


// K·∫øt n·ªëi MQTT 
const mqttClient = mqtt.connect('mqtt://10.21.36.33:8888', {
    username: 'HongLe',
    password: 'hongle1229'
}); 

// K·∫øt n·ªëi SQL Server
const sqlConfig = {
    user: 'sa',
    password: 'hongle1229',
    server: 'localhost',
    database: 'data_sensor_web',
    options: {
        trustServerCertificate: true,
    }
};

// K·∫øt n·ªëi MQTT th√†nh c√¥ng
mqttClient.on('connect', () => {
    console.log("‚úÖ MQTT connected");
    mqttClient.subscribe('sensor/topic', (err) => {
        if (err) {
            console.log("‚ùå Error subscribing to topic", err);
        } else {
            console.log("üì° Subscribed to 'sensor/topic'");
        }
    });
});

// X·ª≠ l√Ω khi nh·∫≠n tin nh·∫Øn t·ª´ MQTT
mqttClient.on('message', async (topic, message) => {
    if (topic === 'sensor/topic') {
        try {
            const data = JSON.parse(message.toString());

            // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßy ƒë·ªß
            if (data.temperature === undefined || data.humidity === undefined || data.light === undefined) {
                console.log("‚ö†Ô∏è D·ªØ li·ªáu thi·∫øu tr∆∞·ªùng c·∫ßn thi·∫øt!");
                return;
            }

            // K·∫øt n·ªëi v√† insert v√†o database
            const pool = await sql.connect(sqlConfig);
            await pool.request()
                .input('temp', sql.Float, data.temperature)
                .input('humidity', sql.Int, data.humidity)
                .input('light', sql.Int, data.light)
                .query(`INSERT INTO sensor_data (Temp, Humidity, Light) VALUES (@temp, @humidity, @light)`);

            console.log("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c ghi v√†o DB:", data);
        } catch (error) {
            console.error("‚ùå L·ªói khi insert v√†o DB:", error.message);
        }
    }
});


